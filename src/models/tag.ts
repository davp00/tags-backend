import { Document } from 'mongoose';
import { SchemaFactory, Schema, Prop, ModelDefinition } from '@nestjs/mongoose';
import { ObjectType, Field } from '@nestjs/graphql';
import { GraphqlField } from '../gql/types/graphqlfield.abstract';

/**
 * Provides the name of the model required on {@linkcode TagModel}.
 */
export const TAG_MODEL_NAME = 'Tag';

/**
 * this class holds the main fields required to be a document when extending from Document,
 * using {@linkcode _pid} as a unique generated sequential number.
 */
@Schema({ timestamps: true })
@ObjectType()
export class Tag extends Document {
  /**
   * Private unique ID generated by MongoDB
   */
  @Field(GraphqlField.id, { name: 'id' })
  _id;

  /**
   * Private unique generated sequential number.
   */
  @Prop({ required: true })
  @Field(GraphqlField.int, { name: 'pid' })
  _pid: number;

  /**
   * name of the tag.
   */
  @Prop({ required: true })
  @Field()
  name: string;

  /**
   * Generated label color.
   */
  @Prop({ required: true })
  @Field()
  color: string;

  /**
   * Date when the object was last modified.
   */
  updatedAt: Date;

  /**
   * Date when the object is created.
   */
  createdAt: Date;
}

/**
 * Saves the mongoose schema generated by {@linkcode SchemaFactory}.
 */
export const TagSchema = SchemaFactory.createForClass(Tag);

/**
 * Used to provide {@linkcode TagSchema} with {@linkcode TAG_MODEL_NAME} as a model to mongoose.
 */
export const TagModel: ModelDefinition = {
  name: TAG_MODEL_NAME,
  schema: TagSchema,
};

export default TagModel;
